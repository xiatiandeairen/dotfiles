## options
# address vim mode switching delay (http://superuser.com/a/252717/65504)
set-option -s escape-time 0

# increase scrollback buffer size
set-option -g history-limit 50000

# tmux messages are displayed for 4 seconds
set-option -g display-time 4000

# refresh 'status-left' and 'status-right'
set-option -g status-left '#[fg=green]#H'
set-option -g status-right '#[fg=yellow]#(date +"%Y-%m-%d %H:%M")'
set-option -g status-interval 60

# upgrade $TERM
set-option -g default-terminal "screen-256color"

# focus events enabled for terminals that support them
set-option -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# enable mouse
set-option -g mouse on

## keymap
# reload config
unbind-key R
bind R source-file ${TMUX_CONFIG_PATH} \; display "Reloaded!"

# split window
unbind-key s
unbind-key v
bind-key s split-window -h -c "#{pane_current_path}"
bind-key v split-window -v -c "#{pane_current_path}"

# close window or pane
unbind-key c
bind c run ' \
if [ $(tmux list-panes | wc -l) -gt 1 ] || [ $(tmux list-windows | wc -l) -gt 1 ]; then \
  tmux kill-pane; \
else \
  tmux kill-session; \
fi'

# resize pane
unbind-key o
unbind-key O
bind o resize-pane -Z
bind O break-pane

# create window
unbind-key t
bind t new-window -c "#{pane_current_path}"

# select window
unbind-key n
unbind-key p
bind -r n next-window
bind -r p previous-window

# resize pane
unbind-key '+'
unbind-key '-'
unbind-key '<'
unbind-key '>'
bind -r '+' resize-pane -D 15
bind -r '-' resize-pane -U 15
bind -r '<' resize-pane -L 15
bind -r '>' resize-pane -R 15

# vim & tmux keymap conflict
bind-key Q run "tmux set-option -g prefix C-a; tmux unbind-key C-b;"
bind-key q run "tmux set-option -g prefix C-b; tmux bind-key C-b send-prefix;"

# jump to mark
bind \` switch-client -t'{marked}'

# switch session
bind-key C-b switch-client -l

# toggle popup
bind O run-shell -b '\
    popup_id="popup_$(tmux display-message -p "##{session_id}" | cut -d"\$" -f2)"; \
    if test "$(echo #{session_name} | cut -d"_" -f 1)" = "popup" ; then \
        tmux detach-client; \
    else \
        tmux popup -d "#{pane_current_path}" -xC -yC -w80% -h75% \
            -E "tmux attach -t \"${popup_id}\" || tmux new -s \"${popup_id}\" "; \
    fi; \
'

bind B run-shell -b '\
    popup_id="right_popup_$(tmux display-message -p "##{session_id}" | cut -d"\$" -f2)"; \
    if test "$(echo #{session_name} | cut -d"_" -f 1)" = "popup" ; then \
        tmux detach-client; \
    else \
        tmux popup -d "#{pane_current_path}" \
            -x "$(tmux display-message -p "#{window_width} - 30*#{window_width}/100")" -yC \
            -w 30% -h 100% \
            -E "tmux attach -t \"${popup_id}\" || tmux new -s \"${popup_id}\" "; \
    fi; \
'

bind J run-shell -b '\
    popup_id="buttom_popup_$(tmux display-message -p "##{session_id}" | cut -d"\$" -f2)"; \
    if test "$(echo #{session_name} | cut -d"_" -f 1)" = "popup" ; then \
        tmux detach-client; \
    else \
        tmux popup -d "#{pane_current_path}" -x 50% -y 100% -w 100% -h 20% \
            -E "tmux attach -t \"${popup_id}\" || tmux new -s \"${popup_id}\" "; \
    fi; \
'


# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'christoomey/vim-tmux-navigator'

run -b "${TMUX_PLUGIN_MANAGER}/tpm"
